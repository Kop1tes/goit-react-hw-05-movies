{"version":3,"file":"static/js/851.dafeb85b.chunk.js","mappings":"+QAGaA,EAAOC,EAAAA,QAAAA,GAAH,uQAWJC,EAAOD,EAAAA,QAAAA,GAAH,4MAOJE,EAAUF,EAAAA,QAAAA,IAAH,uFAKPG,EAAQH,EAAAA,QAAAA,KAAH,4MASLI,GAAUJ,EAAAA,EAAAA,SAAOK,EAAAA,GAAPL,CAAH,2H,mBC5BPM,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,SAACC,EAAA,EAAD,WACI,SAACX,EAAD,UACKQ,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,cAAeC,EAAtC,EAAsCA,YAAtC,OACR,UAACd,EAAD,YACI,SAACC,EAAD,CACIc,IAAKD,EAAW,0CAAsCA,GAAgBE,EACtEC,IAAG,OAAEL,QAAF,IAAEA,EAAAA,EAAkBC,KAE3B,SAACV,EAAD,CAASe,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMb,GAA7C,UACI,SAACL,EAAD,iBAAQU,QAAR,IAAQA,EAAAA,EAAkBC,QANvBF,EADH,OAc3B,E,oBCeD,EAhCa,WACT,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAUA,IARAC,EAAAA,EAAAA,YAAU,WACNH,GAAa,IACbI,EAAAA,EAAAA,MAAwBC,KAAKP,GAAWQ,OAAM,SAAAL,GAC1CC,EAVU,sOAWVK,QAAQC,IAAIP,EACf,IAAEQ,SAAQ,kBAAMT,GAAa,EAAnB,GACd,GAAE,KAEElB,EACD,OAAO,KAGX,IAAM4B,GAAcX,IAAcjB,EAAO6B,OAEzC,OACI,+BACI,UAAC1B,EAAA,EAAD,YACI,2CACCc,IAAa,SAACa,EAAA,EAAD,IACbX,IAAS,uBAAIA,IACbS,IAAc,SAACG,EAAA,EAAD,IACd/B,IAAU,SAACD,EAAD,CAAcC,OAAQA,QAIhD,C","sources":["components/TrendingList/TrendingList.styled.jsx","components/TrendingList/TrendingList.jsx","pages/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 200px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  padding: 0;\n  margin: 0 auto;\n  margin-top: 20px;\n  margin-bottom: 30px;\n  text-align: center;\n`;\nexport const Item = styled.li`\n  border-radius: 20px;\n  padding-bottom: 10px;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ItemImg = styled.img`\n  border-radius: 3px;\n  width: 100%;\n  margin-bottom: 10px;\n`;\nexport const Title = styled.span`\n  text-decoration: none;\n  font-size: 22px;\n  font-weight: 400;\n  line-height: 1.2;\n  padding: 5px;\n  font-family: 'Helvetica Neue';\n  color: var(--secondary-accent-color);\n`;\nexport const LinkNav = styled(NavLink)`\n  padding: 2px 4px;\n  text-decoration: none;\n  color: var(--accent-color);\n  font-weight: 800;\n`;","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Container } from \"components/Container/Container\";\nimport { Item, ItemImg, LinkNav, List, Title } from \"./TrendingList.styled\";\nimport loading from 'img/loading.jpg';\nimport PropTypes from \"prop-types\";\n\nexport const TrendingList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <Container>\n            <List>\n                {movies.map(({ id, original_title, original_name, poster_path }) => (\n                    <Item key={id}>\n                        <ItemImg\n                            src={poster_path ? `https://image.tmdb.org/t/p/w200/${poster_path}` : loading}\n                            alt={original_title ?? original_name}\n                        />\n                        <LinkNav to={`/movies/${id}`} state={{ from: location }}>\n                            <Title>{original_title ?? original_name}</Title>\n                        </LinkNav>\n                    </Item>\n                ))}\n            </List>\n        </Container>\n    );\n};\n\nTrendingList.propTypes = {\n    id: PropTypes.string,\n    original_title: PropTypes.string,\n    original_name: PropTypes.string,\n};","import { Container } from \"components/Container/Container\";\nimport Loader from \"components/Loader/Loader\";\nimport { TrendingList } from \"components/TrendingList/TrendingList\";\nimport { useEffect, useState } from \"react\";\nimport { gerFetchTrendingMovie } from \"../services/moviesApi\";\nimport NotFoundView from \"components/NotFoundView/NotFoundView\";\n\nconst ERROR_MESSAGE = \"Что-то пошло не так, перезагрузите страницу...\";\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        gerFetchTrendingMovie().then(setMovies).catch(error => {\n            setError(ERROR_MESSAGE);\n            console.log(error);\n        }).finally(() => setIsLoading(false));\n    }, []);\n\n    if (!movies) {\n        return null;\n    }\n\n    const isNotFound = !isLoading && !movies.length;\n\n    return (\n        <>\n            <Container>\n                <h1>Trending today</h1>\n                {isLoading && <Loader />}\n                {error && <p>{error}</p>}\n                {isNotFound && <NotFoundView />}\n                {movies && <TrendingList movies={movies} />}\n            </Container>\n        </>\n    );\n};\n\nexport default Home;"],"names":["List","styled","Item","ItemImg","Title","LinkNav","NavLink","TrendingList","movies","location","useLocation","Container","map","id","original_title","original_name","poster_path","src","loading","alt","to","state","from","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","gerFetchTrendingMovie","then","catch","console","log","finally","isNotFound","length","Loader","NotFoundView"],"sourceRoot":""}